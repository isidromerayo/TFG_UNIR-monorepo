name: CI Simple - All Projects

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # Backend Tests
  backend-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Run Backend Tests
      run: |
        cd backend
        ./mvnw clean test
      continue-on-error: true
    
    - name: Backend Test Results
      run: |
        cd backend
        if [ -d "target/surefire-reports" ]; then
          echo "‚úÖ Backend tests executed"
          ls -la target/surefire-reports/
        else
          echo "‚ö†Ô∏è No test reports found"
        fi

  # Security Analysis with Trivy
  security-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build Backend for Analysis
      run: |
        cd backend
        ./mvnw clean package -DskipTests
      continue-on-error: true
    
    - name: Run Trivy Security Scan - Backend
      run: |
        echo "üîç Scanning backend dependencies with Trivy..."
        
        # Scan filesystem for vulnerabilities
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format table --output /workspace/trivy-backend-report.txt /workspace/backend
        
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format template --template "@contrib/html.tpl" \
          --output /workspace/trivy-backend-report.html /workspace/backend
        
        # Scan JAR file if exists
        if [ -f "backend/target/backend.jar" ]; then
          echo "üì¶ Scanning JAR file..."
          docker run --rm -v ${{ github.workspace }}:/workspace \
            aquasec/trivy:latest fs --format table --output /workspace/trivy-backend-jar.txt /workspace/backend/target/backend.jar
          
          docker run --rm -v ${{ github.workspace }}:/workspace \
            aquasec/trivy:latest fs --format template --template "@contrib/html.tpl" \
            --output /workspace/trivy-backend-jar.html /workspace/backend/target/backend.jar
        fi
      continue-on-error: true
    
    - name: Run Trivy Security Scan - Angular
      run: |
        echo "üîç Scanning Angular dependencies with Trivy..."
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format table --output /workspace/trivy-angular-report.txt /workspace/angular
        
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format template --template "@contrib/html.tpl" \
          --output /workspace/trivy-angular-report.html /workspace/angular
      continue-on-error: true
    
    - name: Run Trivy Security Scan - React
      run: |
        echo "üîç Scanning React dependencies with Trivy..."
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format table --output /workspace/trivy-react-report.txt /workspace/react
        
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format template --template "@contrib/html.tpl" \
          --output /workspace/trivy-react-report.html /workspace/react
      continue-on-error: true
    
    - name: Run Trivy Security Scan - Vue3
      run: |
        echo "üîç Scanning Vue3 dependencies with Trivy..."
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format table --output /workspace/trivy-vue3-report.txt /workspace/vue3
        
        docker run --rm -v ${{ github.workspace }}:/workspace \
          aquasec/trivy:latest fs --format template --template "@contrib/html.tpl" \
          --output /workspace/trivy-vue3-report.html /workspace/vue3
      continue-on-error: true
    
    - name: Upload Trivy Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-security-reports
        path: |
          trivy-*-report.txt
          trivy-*-report.html
        retention-days: 30
    
    - name: Security Analysis Summary
      run: |
        echo "üõ°Ô∏è Trivy Security Analysis Completed"
        echo "====================================="
        echo ""
        echo "üìä Reports Generated:"
        ls -la trivy-*-report.* 2>/dev/null || echo "No reports found"
        echo ""
        echo "üìã Summary:"
        for file in trivy-*-report.txt; do
          if [ -f "$file" ]; then
            echo "üìÑ $file:"
            # Show summary of vulnerabilities
            grep -E "(Total:|HIGH|CRITICAL)" "$file" | head -5 || echo "  No critical/high vulnerabilities summary found"
            echo ""
          fi
        done

  # Angular Tests
  angular-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Angular Dependencies
      run: |
        cd angular
        npm install --legacy-peer-deps --force
      continue-on-error: true
    
    - name: Run Angular Tests
      run: |
        cd angular
        npm run test-headless-cc || echo "Angular tests completed with issues"
      continue-on-error: true
    
    - name: Angular Security Audit
      run: |
        cd angular
        echo "üîç Running Angular security audit..."
        npm audit --audit-level=moderate || echo "‚ö†Ô∏è Angular audit found issues"
        npm audit --json > angular-audit.json || true
      continue-on-error: true
    
    - name: Upload Angular Audit Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: angular-security-audit
        path: angular/angular-audit.json
        retention-days: 30

  # React Tests
  react-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install React Dependencies
      run: |
        cd react
        npm ci || npm install
    
    - name: Run React Tests
      run: |
        cd react
        npm run test-headless-cc || echo "React tests completed with issues"
      continue-on-error: true
    
    - name: React Security Audit
      run: |
        cd react
        echo "üîç Running React security audit..."
        npm audit --audit-level=moderate || echo "‚ö†Ô∏è React audit found issues"
        npm audit --json > react-audit.json || true
      continue-on-error: true
    
    - name: Upload React Audit Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-security-audit
        path: react/react-audit.json
        retention-days: 30

  # Vue3 Tests
  vue3-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Vue3 Dependencies
      run: |
        cd vue3
        npm ci || npm install
    
    - name: Run Vue3 Tests
      run: |
        cd vue3
        npm run test-headless-cc || echo "Vue3 tests completed with issues"
      continue-on-error: true
    
    - name: Vue3 Security Audit
      run: |
        cd vue3
        echo "üîç Running Vue3 security audit..."
        npm audit --audit-level=moderate || echo "‚ö†Ô∏è Vue3 audit found issues"
        npm audit --json > vue3-audit.json || true
      continue-on-error: true
    
    - name: Upload Vue3 Audit Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: vue3-security-audit
        path: vue3/vue3-audit.json
        retention-days: 30

  # Build All Projects
  build-all:
    needs: [backend-tests, security-analysis, angular-tests, react-tests, vue3-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Build Backend
      run: |
        cd backend
        ./mvnw clean package -DskipTests
      continue-on-error: true
    
    - name: Build Angular
      run: |
        cd angular
        npm install --legacy-peer-deps --force
        npm run build || echo "Angular build completed with warnings"
      continue-on-error: true
    
    - name: Build React
      run: |
        cd react
        npm ci || npm install
        npm run build || echo "React build completed with warnings"
      continue-on-error: true
    
    - name: Build Vue3
      run: |
        cd vue3
        npm ci || npm install
        npm run build || echo "Vue3 build completed with warnings"
      continue-on-error: true
    
    - name: Summary
      run: |
        echo "üéâ Build process completed!"
        echo "‚úÖ All projects have been processed"
        echo "üìä Check individual job logs for detailed results"

  # Security Summary
  security-summary:
    needs: [security-analysis, angular-tests, react-tests, vue3-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Security Analysis Summary
      run: |
        echo "üõ°Ô∏è Security Analysis Summary"
        echo "=========================="
        echo ""
        echo "üìã Analysis Completed:"
        echo "  ‚úÖ Backend: Trivy filesystem and JAR analysis"
        echo "  ‚úÖ Angular: Trivy filesystem analysis"
        echo "  ‚úÖ React: Trivy filesystem analysis"
        echo "  ‚úÖ Vue3: Trivy filesystem analysis"
        echo ""
        echo "üìä Reports Available:"
        echo "  - Trivy Security Reports (HTML & Text)"
        echo "  - Backend JAR Analysis (HTML & Text)"
        echo "  - Frontend Dependencies Analysis (HTML & Text)"
        echo ""
        echo "üîç To view reports:"
        echo "  1. Go to Actions tab"
        echo "  2. Click on this workflow run"
        echo "  3. Download artifacts from the bottom of the page"
        echo ""
        echo "‚ö†Ô∏è  Note: Review all security reports before deployment"